---
haproxy_log_socket: true
haproxy_log_network: false
haproxy_log_network_host: 127.0.0.1
haproxy_socket: /var/lib/haproxy/stats
haproxy_chroot: /var/lib/haproxy
haproxy_cfg_dest: /etc/haproxy/haproxy.cfg
haproxy_user: haproxy
haproxy_group: haproxy
haproxy_service_name: haproxy
haproxy_cfg_only: false
haproxy_connect_timeout: 5000
haproxy_client_timeout: 50000
haproxy_server_timeout: 50000
# haproxy_log_format: '%ci:%cp\ [%t]\ %ft\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %CC\ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ %{+Q}r'

# Frontend settings.
haproxy_frontends:
  - name: 'hafrontend'
    bind:
      - address: '*'
        port: 80
        ssl: false
        pem_local: '/etc/ansible/host_files/haproxy/haproxy.pem'
        pem_proxy: '/etc/ssl/certs/haproxy.pem'
    ssl_redirect: false
    option: []
    acl: []
    use_backend: []
    # - value: ''
    mode: 'http'
    backend_name: 'habackend'

# Backend settings.
haproxy_backends:
  - name: 'habackend'
    mode: 'http'
    balance_method: 'roundrobin'
    option:
      - 'forwardfor'
      - 'httpchk HEAD / HTTP/1.1\r\nHost:localhost'
    http_auth_userlist: userlist_name1
    cookie: true
    # List of backend servers.
    servers: []
    # - name: app1
    #   address: 192.168.0.1:80
    #   options: 'cookie app1 check'
    # - name: app2
    #   address: 192.168.0.2:80
    #   options: 'cookie app2 check'

# userlists:
#  - name: userlist_name1
#    users:
#      - username: test
#       password_type: insecure-password
#        password: abc123
